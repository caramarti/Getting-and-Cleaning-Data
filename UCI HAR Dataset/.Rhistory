data<-read.table('EEBA.csv', sep=',', header=TRUE)
View(data)
data<-read.table('EEBA.csv', sep=',', header=TRUE)
data<-read.table('EEBA.csv', sep=',')
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
count=n()
avg_bytes = mean(size))
avg_bytes = mean(size)
View(by_package)
pack_sum <- summarize(by_package, count = n(), unique = n_distinct(ip_id),countries = n_distinct(country),avg_bytes = mean(size))
bye()
swirl()
bye()
swirl()
submit()
tbl
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum,count>679)->top_counts
top_counts
head(top_counts, 20)
arrange(top_counts,desc(count))
quantile(pack_sum$unique, probs = 0.99)
filter(pack_sum,unique>465)->top_unique
top_unique
arrange(top_unique,desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
gather(students2,sex_class,count)->res
gather(students2,sex_class,count,-grade)->res
res
?separate
separate(res, sex_class, c('sex','class'))
submit()
students3
submit()
?spread
submit()
submit()
submit()
try extract_numeric("class5")
extract_numeric("class5")
?mutate
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed, status='passed')
failed<-mutate(failed, status='failed')
?rbind_list
rbind_list(passed,failed)
sat
?separate
submit()
submit()
?group_by
?mutate
submit()
submit()
submit()
?separate
?group_by
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day<-today()
this_day
day(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
minute(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd('1989 May 17')
mdy('March 12, 1975')
ymd(25081985)
dmy(25081985)
ymd("192012")
ymd("1/9/2012")
ymd("1920/1/2")
dt1
dt1
dt1
ymd(dt1)
dt
get.Sys.time()
Sys.getlocale("LC_TIME")
Sys.setlocale('en_US.UTF-8')
?setlocale
Sys.setlocale("LC_TIME", "en_US.utf8")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
Sys.getlocale('LC_TIME')
library(lubridate)
help(package = lubridate)
this_day<-today()
this_day
day(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment
this_moment<-now()
this_moment
minute(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd('1989 May 17')
mdy('March 12, 1975')
ymd(25081985)
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms(03:22:14)
hms('03:22:14')
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment, hours = 20, minutes = 34, seconds = 55)
this_moment
nyc<-now('America/New_York')
nyc
depart<-nyc+days(2)
depart
depart<-update(depart,hours=17, minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive, tzone='Asia/Hong_Kong')
arrive
last_time<-mdy('June 17,2008', tz='Singapore')
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
### Read and merge the training and test sets to create one data set
### Read and merge the training and test sets to create one data set
## Read the X data sets and combine them
testData <- read.table('test/X_test.txt')
trainData <- read.table('train/X_train.txt')
X_data <- rbind(testData, trainData)
## Read the Subject data sets and combine them
subTest <- read.table('test/subject_test.txt')
subTrain <- read.table('train/subject_train.txt')
Subject <- rbind(subTest, subTrain)
colnames(Subject)[1] <- 'Subject'
## Read the y data sets and combine them
test_y <- read.table('test/y_test.txt')
train_y <- read.table('train/y_train.txt')
y <- rbind(test_y, train_y)
colnames(y)[1] <- 'Activity'
## Remove unused variables
rm(testData, trainData, subTest, subTrain, test_y, train_y)
### Read features file
Features <- read.table('features.txt')
#Get the names from the features and keep only standard deviation and mean
Features_sub <- Features$V2
Features_M_SD <- grepl('(std|mean[^F])', Features_sub, perl=TRUE)
#Keep only needed data
X_data <- X_data[,Features_M_SD]
names(X_data) <- Features_sub[Features_M_SD]
names(X_data)<-gsub('\\(|\\)', '', names(X_data)) #removed brackets from the names of the columns
##Read activity list to get the activity names to add to the data set
activities <- read.table('activity_labels.txt')
activities[,2] = gsub("_", "", tolower(as.character(activities[,2])))
y[,1]=activities[y[,1],2]
##Create tidy data set
tidyData <- cbind(Subject, y, X_data)
### Create second tidy data set with the average of each variable for each activity and each subject
subj <- unique(Subject)[,1]
numSub <- length(subj)
numAct <- length(activities[,1])
numCol <- length(names(tidyData))
tidydata <- tidyData[1:(numSub*numAct),]
#Get the average values
row <- 1
for (s in 1:numSub){
for (a in 1:numAct){
tidydata[row,1] <- subj[s]
tidydata[row,2] <- activities[a, 2]
temp <- tidyData[tidyData$Subject==s & tidyData$Activity==activities[a,2],]
tidydata[row, 3:numCol] <- colMeans(temp[,3:numCol])
row <- row+1
}
}
#Write the dataset to a file
write.table(tidydata, 'tidyData.txt', row.name=FALSE)
### Read and merge the training and test sets to create one data set
## Read the X data sets and combine them
testData <- read.table('test/X_test.txt')
trainData <- read.table('train/X_train.txt')
X_data <- rbind(testData, trainData)
## Read the Subject data sets and combine them
subTest <- read.table('test/subject_test.txt')
subTrain <- read.table('train/subject_train.txt')
Subject <- rbind(subTest, subTrain)
colnames(Subject)[1] <- 'Subject'
## Read the y data sets and combine them
test_y <- read.table('test/y_test.txt')
train_y <- read.table('train/y_train.txt')
y <- rbind(test_y, train_y)
colnames(y)[1] <- 'Activity'
## Remove unused variables
rm(testData, trainData, subTest, subTrain, test_y, train_y)
### Read features file
Features <- read.table('features.txt')
#Get the names from the features and keep only standard deviation and mean
Features_sub <- Features$V2
Features_M_SD <- grepl('(std|mean[^F])', Features_sub, perl=TRUE)
#Keep only needed data
X_data <- X_data[,Features_M_SD]
names(X_data) <- Features_sub[Features_M_SD]
names(X_data)<-gsub('\\(|\\)', '', names(X_data)) #removed brackets from the names of the columns
##Read activity list to get the activity names to add to the data set
activities <- read.table('activity_labels.txt')
activities[,2] = gsub("_", "", tolower(as.character(activities[,2])))
y[,1]=activities[y[,1],2]
##Create tidy data set
tidyData <- cbind(Subject, y, X_data)
### Create second tidy data set with the average of each variable for each activity and each subject
subj <- unique(Subject)[,1]
numSub <- length(subj)
numAct <- length(activities[,1])
numCol <- length(names(tidyData))
tidydata <- tidyData[1:(numSub*numAct),]
#Get the average values
row <- 1
for (s in 1:numSub){
for (a in 1:numAct){
tidydata[row,1] <- subj[s]
tidydata[row,2] <- activities[a, 2]
temp <- tidyData[tidyData$Subject==s & tidyData$Activity==activities[a,2],]
tidydata[row, 3:numCol] <- colMeans(temp[,3:numCol])
row <- row+1
}
}
#Write the dataset to a file
write.table(tidydata, 'tidyData.txt', row.name=FALSE)
setwd('/home/cara-marti/Getting-and-Cleaning-Data')
### Read and merge the training and test sets to create one data set
## Read the X data sets and combine them
testData <- read.table('test/X_test.txt')
trainData <- read.table('train/X_train.txt')
X_data <- rbind(testData, trainData)
## Read the Subject data sets and combine them
subTest <- read.table('test/subject_test.txt')
subTrain <- read.table('train/subject_train.txt')
Subject <- rbind(subTest, subTrain)
colnames(Subject)[1] <- 'Subject'
## Read the y data sets and combine them
test_y <- read.table('test/y_test.txt')
train_y <- read.table('train/y_train.txt')
y <- rbind(test_y, train_y)
colnames(y)[1] <- 'Activity'
## Remove unused variables
rm(testData, trainData, subTest, subTrain, test_y, train_y)
### Read features file
Features <- read.table('features.txt')
#Get the names from the features and keep only standard deviation and mean
Features_sub <- Features$V2
Features_M_SD <- grepl('(std|mean[^F])', Features_sub, perl=TRUE)
#Keep only needed data
X_data <- X_data[,Features_M_SD]
names(X_data) <- Features_sub[Features_M_SD]
names(X_data)<-gsub('\\(|\\)', '', names(X_data)) #removed brackets from the names of the columns
##Read activity list to get the activity names to add to the data set
activities <- read.table('activity_labels.txt')
activities[,2] = gsub("_", "", tolower(as.character(activities[,2])))
y[,1]=activities[y[,1],2]
##Create tidy data set
tidyData <- cbind(Subject, y, X_data)
### Create second tidy data set with the average of each variable for each activity and each subject
subj <- unique(Subject)[,1]
numSub <- length(subj)
numAct <- length(activities[,1])
numCol <- length(names(tidyData))
tidydata <- tidyData[1:(numSub*numAct),]
#Get the average values
row <- 1
for (s in 1:numSub){
for (a in 1:numAct){
tidydata[row,1] <- subj[s]
tidydata[row,2] <- activities[a, 2]
temp <- tidyData[tidyData$Subject==s & tidyData$Activity==activities[a,2],]
tidydata[row, 3:numCol] <- colMeans(temp[,3:numCol])
row <- row+1
}
}
#Write the dataset to a file
write.table(tidydata, 'tidyData.txt', row.name=FALSE)
### Read and merge the training and test sets to create one data set
## Read the X data sets and combine them
testData <- read.table('test/X_test.txt')
trainData <- read.table('train/X_train.txt')
X_data <- rbind(testData, trainData)
## Read the Subject data sets and combine them
subTest <- read.table('test/subject_test.txt')
subTrain <- read.table('train/subject_train.txt')
Subject <- rbind(subTest, subTrain)
colnames(Subject)[1] <- 'Subject'
## Read the y data sets and combine them
test_y <- read.table('test/y_test.txt')
train_y <- read.table('train/y_train.txt')
y <- rbind(test_y, train_y)
colnames(y)[1] <- 'Activity'
## Remove unused variables
rm(testData, trainData, subTest, subTrain, test_y, train_y)
### Read features file
Features <- read.table('features.txt')
#Get the names from the features and keep only standard deviation and mean
Features_sub <- Features$V2
Features_M_SD <- grepl('(std|mean[^F])', Features_sub, perl=TRUE)
#Keep only needed data
X_data <- X_data[,Features_M_SD]
names(X_data) <- Features_sub[Features_M_SD]
names(X_data)<-gsub('\\(|\\)', '', names(X_data)) #removed brackets from the names of the columns
##Read activity list to get the activity names to add to the data set
activities <- read.table('activity_labels.txt')
activities[,2] = gsub("_", "", tolower(as.character(activities[,2])))
y[,1]=activities[y[,1],2]
##Create tidy data set
tidyData <- cbind(Subject, y, X_data)
### Create second tidy data set with the average of each variable for each activity and each subject
subj <- unique(Subject)[,1]
numSub <- length(subj)
numAct <- length(activities[,1])
numCol <- length(names(tidyData))
tidydata <- tidyData[1:(numSub*numAct),]
#Get the average values
row <- 1
for (s in 1:numSub){
for (a in 1:numAct){
tidydata[row,1] <- subj[s]
tidydata[row,2] <- activities[a, 2]
temp <- tidyData[tidyData$Subject==s & tidyData$Activity==activities[a,2],]
tidydata[row, 3:numCol] <- colMeans(temp[,3:numCol])
row <- row+1
}
}
#Write the dataset to a file
write.table(tidydata, 'tidyData.txt', row.name=FALSE)
testData <- read.table('test/X_test.txt')
setwd('/home/cara-marti/Getting-and-Cleaning-Data/UCI HAR Dataset')
### Read and merge the training and test sets to create one data set
## Read the X data sets and combine them
testData <- read.table('test/X_test.txt')
trainData <- read.table('train/X_train.txt')
X_data <- rbind(testData, trainData)
## Read the Subject data sets and combine them
subTest <- read.table('test/subject_test.txt')
subTrain <- read.table('train/subject_train.txt')
Subject <- rbind(subTest, subTrain)
colnames(Subject)[1] <- 'Subject'
## Read the y data sets and combine them
test_y <- read.table('test/y_test.txt')
train_y <- read.table('train/y_train.txt')
y <- rbind(test_y, train_y)
colnames(y)[1] <- 'Activity'
## Remove unused variables
rm(testData, trainData, subTest, subTrain, test_y, train_y)
### Read features file
Features <- read.table('features.txt')
#Get the names from the features and keep only standard deviation and mean
Features_sub <- Features$V2
Features_M_SD <- grepl('(std|mean[^F])', Features_sub, perl=TRUE)
#Keep only needed data
X_data <- X_data[,Features_M_SD]
names(X_data) <- Features_sub[Features_M_SD]
names(X_data)<-gsub('\\(|\\)', '', names(X_data)) #removed brackets from the names of the columns
##Read activity list to get the activity names to add to the data set
activities <- read.table('activity_labels.txt')
activities[,2] = gsub("_", "", tolower(as.character(activities[,2])))
y[,1]=activities[y[,1],2]
##Create tidy data set
tidyData <- cbind(Subject, y, X_data)
### Create second tidy data set with the average of each variable for each activity and each subject
subj <- unique(Subject)[,1]
numSub <- length(subj)
numAct <- length(activities[,1])
numCol <- length(names(tidyData))
tidydata <- tidyData[1:(numSub*numAct),]
#Get the average values
row <- 1
for (s in 1:numSub){
for (a in 1:numAct){
tidydata[row,1] <- subj[s]
tidydata[row,2] <- activities[a, 2]
temp <- tidyData[tidyData$Subject==s & tidyData$Activity==activities[a,2],]
tidydata[row, 3:numCol] <- colMeans(temp[,3:numCol])
row <- row+1
}
}
#Write the dataset to a file
write.table(tidydata, 'tidyData.txt', row.name=FALSE)
